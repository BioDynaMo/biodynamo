# Additional valgrind suppression file for BioDynaMo.
#
# To use, run valgrind with:
#   valgrind --suppressions=valgrind.supp ...
#
# This file suppresses known and expected / inevitable valgrind
# reports, e.g. due to ROOT's runtime type information that must
# survive until the end of the process and thus leaks.

######### Suppress OpenMP possible lost warning
{
   ignore_openmp_possible_lost_warning
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:allocate_stack
   fun:pthread_create@@GLIBC_*
   obj:*/libgomp.so*
   #fun:GOMP_parallel
}

{
   ignore_openmp_possible_lost_warning_icc
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:allocate_stack
   fun:pthread_create@@GLIBC_*
   fun:*
   fun:__kmp_allocate_thread
   fun:__kmp_allocate_team
   fun:__kmp_fork_call
   fun:__kmpc_fork_call
}

{
   ignore_openmp_initialization_warnings_icc
   Memcheck:Cond
   fun:__intel_sse2_*
   fun:__kmp_query_cpuid
   fun:__kmp_runtime_initialize
   fun:_Z26__kmp_do_serial_initializev
   fun:__kmp_get_global_thread_id_reg
}

{
   ignore_openmp_initialization_warnings_icc_2
   Memcheck:Param
   sched_setaffinity(mask)
   fun:syscall
   fun:__kmp_affinity_determine_capable
   fun:_Z20__kmp_env_initializePKc
   fun:_Z26__kmp_do_serial_initializev
   fun:__kmp_get_global_thread_id_reg
}

{
  ignore_Syscall_param_sched_setaffinity_mask__points_to_unaddressable_bytes
  Memcheck:Param
  sched_setaffinity(mask)
  fun:syscall
  fun:__kmp_affinity_determine_capable
  fun:_Z20__kmp_env_initializePKc
  fun:_ZL26__kmp_do_serial_initializev
  fun:__kmp_get_global_thread_id_reg
  fun:GOMP_parallel@@VERSION
}

######### Suppress ICC false positives
{
   gtest_uninitialized_value_icc
   Memcheck:Cond
   fun:_ZN7testing8internal12UnitTestImpl11FilterTestsENS1_18ReactionToShardingE
   fun:_ZN7testing8internal12UnitTestImpl11RunAllTestsEv
   fun:_ZN7testing8UnitTest3RunEv
   fun:main
}


######### Suppress ROOT issues, they are checked by the ROOT team
{
   ignore_root_libs_leak
   Memcheck:Leak
   ...
   obj:*/root/lib/*.so
}

{
   ignore_root_libs_cond
   Memcheck:Cond
   ...
   obj:*/root/lib/*.so
}

{
   ignore_macos_dyld_leak
   Memcheck:Leak
   ...
   obj:/usr/lib/dyld
}

{
   ignore_macos_dyld_cond
   Memcheck:Cond
   ...
   obj:/usr/lib/dyld
}

{
   ignore_macos_dyld_val8
   Memcheck:Value8
   ...
   obj:/usr/lib/dyld
}

{
   ignore_macos_frameworks_leak
   Memcheck:Leak
   ...
   obj:/System/Library/Frameworks/*
}

{
   ignore_macos_libs_leak
   Memcheck:Leak
   ...
   obj:/usr/lib/system/*.dylib
}

######### Suppress uninitialized value complaints for IO of InlineVector
{
   ignore_uninitialized_heap_io
   Memcheck:Param
   write(buf)
   ...
   fun:_ZN5TFile11WriteBufferEPKci
   fun:_ZN4TKey9WriteFileEiP5TFile
   fun:_ZN14TDirectoryFile14WriteObjectAnyEPKvPK6TClassPKcS6_i
   ...
}

######### Suppress rootcling false positives
{
   false_positive_root_1
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesERKNS_5TwineEPNS_6ModuleE
   fun:_ZN4llvm6Module19getOrInsertFunctionENS_9StringRefEPNS_12FunctionTypeENS_12AttributeSetE
   fun:_ZN4llvm6Module19getOrInsertFunctionENS_9StringRefEPNS_12FunctionTypeE
   fun:_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleENS0_2IDENS_8ArrayRefIPNS_4TypeEEE
   fun:_ZN4llvm13IRBuilderBase19CreateLifetimeStartEPNS_5ValueEPNS_11ConstantIntE
   fun:_ZN4llvm14InlineFunctionENS_8CallSiteERNS_18InlineFunctionInfoEPNS_9AAResultsEb
   fun:_ZN4llvm7Inliner11inlineCallsERNS_12CallGraphSCCE
   fun:_ZN12_GLOBAL__N_113CGPassManager11runOnModuleERN4llvm6ModuleE
   fun:_ZN4llvm6legacy15PassManagerImpl3runERNS_6ModuleE
   fun:_ZN5cling13BackendPasses11runOnModuleERN4llvm6ModuleE
   fun:_ZN5cling17IncrementalParser22transformTransactionIREPNS_11TransactionE
}

{
   false_positive_root_2
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN4llvm4UsernwEmj
   fun:_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_
   fun:_ZN4llvm9IRBuilderINS_14ConstantFolderEN5clang7CodeGen17CGBuilderInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE
   ...
}

######### Suppress protobuf library issues (for travis)
{
   ignore_protobuf_memleaks
   Memcheck:Leak
   ...
   fun:_ZN6google8protobuf14DescriptorPool24InternalAddGeneratedFileEPKvi
   ...
}

######### Suppress glibc issues
{
   glibc_issue_1
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:do_dlopen
   fun:_dl_catch_error
   fun:dlerror_run
   fun:__libc_dlopen_mode
   fun:nss_load_library
   fun:__nss_lookup_function
   fun:__nss_lookup
   fun:getpwuid_r@@GLIBC_2.2.5
}

######### Suppress OpenCL issues
{
   ignore_opencl_false_positives
   Memcheck:Leak
   ...
   obj:*/lib*OpenCL.so*
   ...
}

{
   ignore_opencl_false_positives_param
   Memcheck:Param
   ioctl(generic)
   ...
   obj:*/lib*OpenCL.so*
   ...
}


{
   ignore_opencl_intel_specific_false_positives_free
   Memcheck:Free
   ...
   obj:*/libigdrcl.so
   ...
}

{
   ignore_opencl_intel_specific_false_positives_cond
   Memcheck:Cond
   ...
   obj:*/libigdrcl.so
   ...
}

{
   ignore_opencl_intel_specific_false_positives_cond_2
   Memcheck:Cond
   ...
   obj:*/libigdccl.so
   ...
}


{
   ignore_opencl_intel_specific_false_positives_leak
   Memcheck:Leak
   ...
   obj:*/libigdrcl.so
   ...
}

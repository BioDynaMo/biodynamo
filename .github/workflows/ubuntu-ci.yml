name: Ubuntu CI

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libopenmpi-dev libomp5 libomp-dev libnuma-dev freeglut3-dev \
          libreadline-dev libsqlite3-dev tk-dev python-openssl ninja-build
        curl -L -O https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3-Linux-x86_64.sh
        chmod +x cmake-3.17.3-Linux-x86_64.sh
        sudo ./cmake-3.17.3-Linux-x86_64.sh --skip-license --prefix=/usr/local

    - name: Set OSVERS
      run: echo "::set-env name=OSVERS::$(lsb_release -si)-$(lsb_release -sr)"

    - name: Cache pyenv
      uses: actions/cache@v2
      id: pyenv-cache
      with:
        path: ~/.pyenv
        key: ${{ env.OSVERS }}-pyenv-3.6.9

    - name: Install pyenv dependency
      if: steps.pyenv-cache.outputs.cache-hit != 'true'
      run: |
        curl https://pyenv.run | bash
        export PATH="$HOME/.pyenv/bin:$PATH"
        eval "$(pyenv init -)"
        PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install 3.6.9
        pyenv shell 3.6.9

    - name: Checkout BioDynaMo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Cache Third Party Packages
      uses: actions/cache@v2
      with:
        path: build/third_party
        key: ${{ env.OSVERS }}-third-party-${{ hashFiles('cmake/external/SHA256Digests.cmake') }}

    - name: Build BioDynaMo
      shell: bash
      run: |
        cmake -G Ninja \
          -Dparaview=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -B build
        cmake --build build --parallel --config Release

    - name: Unit tests BioDynaMo
      shell: bash
      working-directory: build
      run: |
        . bin/thisbdm.sh
        export DISPLAY=:99.0
        ../util/xvfb-initd.sh start
        sleep 3
        ninja run-unit-tests
        ../util/xvfb-initd.sh stop

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: Integration Test
        fields: repo,ref,message,author,action,workflow # default: repo,commit
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: always() # Pick up events even if the job fails or is canceled.

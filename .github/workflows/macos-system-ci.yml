# Runs the installation tests in the following cases:
#   1) every day at 3 am
#   2) a pull request to the master branch

name: macOS System CI

on:
  schedule:
    # Every day at 3 am
    - cron: '0 3 * * *'
  pull_request:
    # Upon pull requests
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Set GHA_BRANCH_NAME
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          echo "::set-env name=GHA_BRANCH_NAME::${{ github.head_ref }}"
        fi
        if [ "${{ github.event_name }}" = "schedule" ]; then
          echo "::set-env name=GHA_BRANCH_NAME::${GITHUB_REF#refs/heads/}"
        fi
    
    - name: Install BioDynaMo
      shell: zsh {0}
      run: |
        brew update
        brew install curl
        curl https://raw.githubusercontent.com/BioDynaMo/biodynamo/${GHA_BRANCH_NAME}/util/install | bash

    - name: Checkout BioDynaMo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set INSTALL_DIR
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          echo "::set-env name=INSTALL_DIR::${GITHUB_WORKSPACE}/build"
        fi
        if [ "${{ github.event_name }}" = "schedule" ]; then
          VERSION=`git describe --tags`
          REGEX='[^-]*'
          [[ $VERSION =~ $REGEX ]]
          echo "::set-env name=INSTALL_DIR::${HOME}/biodynamo-${BASH_REMATCH}"
        fi
        
    - name: Cache pyenv
      uses: actions/cache@v2
      id: pyenv-cache
      with:
        path: /usr/local/opt/.pyenv
        key: ${{ runner.os }}-pyenv-3.8.0

    - name: Install pyenv dependency
      if: steps.pyenv-cache.outputs.cache-hit != 'true'
      run: |
        export PYENV_ROOT=/usr/local/opt/.pyenv
        eval "$(pyenv init -)"
        PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install 3.8.0
        pyenv shell 3.8.0

    - name: Cache Third Party Packages
      uses: actions/cache@v2
      with:
        path: build/third_party
        key: ${{ runner.os }}-third-party-${{ hashFiles('cmake/external/SHA256Digests.cmake') }}

    - name: Build BioDynaMo
      shell: zsh {0}
      run: |
        cmake \
          -Dopencl=OFF \
          -Dparaview=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          -B build
        cmake --build build --parallel --config Release

    # Don't do this in the `Build BioDynaMo step`, because notebooks might time out in GHA
    # runners, while waiting for other targets to be compiled
    - name: Run notebooks
      shell: zsh {0}
      run: |
        cmake \
          -Dnotebooks=ON \
          -B build
        cmake --build build --parallel --config Release --target notebooks

    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v2

    - name: System tests BioDynaMo
      shell: zsh {0}
      working-directory: build
      run: |
        . $INSTALL_DIR/bin/thisbdm.sh
        git config --system user.name "Test User"
        git config --system user.email user@test.com
        make run-demos

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took,message
        custom_payload: |
          {
            username: 'GitHub CI',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}\n${process.env.AS_MESSAGE}`
            }]
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      # Notify Slack step should run when the following holds true:
      #   * One of the previous steps 1) succeeded, 2) failed, or 3) was cancelled
      #   * This workflow is triggered from our base repository (i.e. forked PRs don't
      #     have the right to push Slack message to our channel)
      if: ${{ ( failure() || success() || cancelled() ) && ( github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name ) }}

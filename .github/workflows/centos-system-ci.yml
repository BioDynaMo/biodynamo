# Runs the installation tests and valgrind tests in the following cases:
#   1) every day at 3 am
#   2) a pull request to the master branch

name: CentOS System CI

on:
  schedule:
    # Every day at 3 am
    - cron: '0 3 * * *'
  pull_request:
    # Upon pull requests
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: centos:7

    steps:
    - name: Install dependencies
      run: |
        yum -y update
        yum -y install centos-release-scl epel-release
        yum -y install man wget environment-modules libXt-devel libXext-devel ninja-build make \
          devtoolset-7-gcc* numactl-devel openmpi3-devel freeglut-devel redhat-lsb-core \
          scl-utils which xorg-x11-server-Xvfb fontconfig mesa-dri-drivers valgrind
        yum -y install @development zlib-devel bzip2 bzip2-devel readline-devel sqlite \
          sqlite-devel openssl-devel xz xz-devel libffi-devel findutils
        yum -y remove git*
        yum -y install https://packages.endpoint.com/rhel/7/os/x86_64/endpoint-repo-1.7-1.x86_64.rpm
        yum -y install git
        curl -L -O https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3-Linux-x86_64.sh
        chmod +x cmake-3.17.3-Linux-x86_64.sh
        ./cmake-3.17.3-Linux-x86_64.sh --skip-license --prefix=/usr/local

    - name: Set OSVERS
      run: echo "::set-env name=OSVERS::$(lsb_release -si)-$(lsb_release -sr)"

    - name: Cache pyenv
      uses: actions/cache@v2
      id: pyenv-cache
      with:
        path: ~/.pyenv
        key: ${{ env.OSVERS }}-pyenv-3.6.9

    - name: Install pyenv dependency
      if: steps.pyenv-cache.outputs.cache-hit != 'true'
      run: |
        curl https://pyenv.run | bash
        export PATH="$HOME/.pyenv/bin:$PATH"
        eval "$(pyenv init -)"
        PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install 3.6.9
        pyenv shell 3.6.9

    - name: Checkout BioDynaMo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Cache Third Party Packages
      uses: actions/cache@v2
      with:
        path: build/third_party
        key: ${{ env.OSVERS }}-third-party-${{ hashFiles('cmake/external/SHA256Digests.cmake') }}

    - name: Build BioDynaMo
      shell: bash
      run: |
        . scl_source enable devtoolset-7 || true
        . /etc/profile.d/modules.sh || true
        module load mpi
        cmake -G Ninja \
          -Dparaview=ON \
          -Dnuma=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          -B build
        cmake --build build --parallel --config Release

    - name: Valgrind tests BioDynaMo
      shell: bash
      working-directory: build
      run: |
        . scl_source enable devtoolset-7 || true
        . /etc/profile.d/modules.sh || true
        module load mpi
        . bin/thisbdm.sh
        export DISPLAY=:99.0
        ../util/xvfb-initd.sh start
        sleep 3
        ninja run-valgrind
        ../util/xvfb-initd.sh stop

    - name: System tests BioDynaMo
      shell: bash
      working-directory: build
      run: |
        . scl_source enable devtoolset-7 || true
        . /etc/profile.d/modules.sh || true
        module load mpi
        . bin/thisbdm.sh
        git config --system user.name "Test User"	
        git config --system user.email user@test.com
        export DISPLAY=:99.0
        ../util/xvfb-initd.sh start
        sleep 3
        ninja run-demos
        ../util/xvfb-initd.sh stop

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: Integration Test
        fields: repo,ref,message,author,action,workflow # default: repo,commit
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: always() # Pick up events even if the job fails or is canceled.

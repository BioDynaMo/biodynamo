name: Update gitpod integration repository 

on:
  # schedule:
  #   # Every day at 3 am
  #   - cron: '0 3 * * *'
   
  # Enable manual triggering of this workflow 
  workflow_dispatch:
      inputs:
        logLevel:
          description: 'Log level'     
          required: true
          default: 'warning'
        tags:
          description: 'Test scenario tags' 

jobs:
  update-gitpod-integration-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: 'LukasBreitwieser/gitpod-vnc'
          ref: master

      - name: Update gitpod.Dockerfile
        run: |
          sed -i "s/[a-fA-F0-9]\{40\} /$GITHUB_SHA /g" gitpod.Dockerfile

      - name: Push new gitpod.Dockerfile
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'gitpod.Dockerfile'
          destination_repo: 'LukasBreitwieser/gitpod-vnc'
          destination_branch: 'master'
          user_email: 'lukas.breitwieser@cern.ch'
          user_name: 'Lukas Breitwieser'
          commit_message: 'Update BioDynaMo commit id'

      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took,message
          custom_payload: |
            {
              username: 'GitHub CI',
              icon_emoji: ':octocat:',
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}\n${process.env.AS_MESSAGE}`
              }]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # Required when using matrix
        # Notify Slack step should run when the following holds true:
        #   * One of the previous steps 1) succeeded, 2) failed, or 3) was cancelled
        #   * This workflow is triggered from our base repository (i.e. forked PRs don't
        #     have the right to push Slack message to our channel)
        if: ${{ ( failure() || success() || cancelled() ) && ( github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name ) }}


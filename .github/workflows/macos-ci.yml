name: macOS CI

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Install dependencies
      run: |
        brew install libomp open-mpi pyenv wget cmake ninja

    - name: Cache pyenv
      uses: actions/cache@v2
      id: pyenv-cache
      with:
        path: /usr/local/opt/.pyenv
        key: ${{ runner.os }}-pyenv-3.8.0

    - name: Install pyenv dependency
      if: steps.pyenv-cache.outputs.cache-hit != 'true'
      run: |
        export PYENV_ROOT=/usr/local/opt/.pyenv
        eval "$(pyenv init -)"
        PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install 3.8.0
        pyenv shell 3.8.0

    - name: Checkout BioDynaMo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Cache Third Party Packages
      uses: actions/cache@v2
      with:
        path: build/third_party
        key: ${{ runner.os }}-third-party-${{ hashFiles('cmake/external/SHA256Digests.cmake') }}

    - name: Build BioDynaMo
      shell: bash
      run: |
        cmake -G Ninja \
          -Dopencl=OFF \
          -Dparaview=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          -B build
        cmake --build build --parallel --config Release

    - name: Unit tests BioDynaMo
      shell: bash
      working-directory: build
      run: |
        . bin/thisbdm.sh
        ninja run-unit-tests

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took,message
        custom_payload: |
          {
            username: 'GitHub CI',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}\n${process.env.AS_MESSAGE}`
            }]
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always() # Pick up events even if the job fails or is canceled
